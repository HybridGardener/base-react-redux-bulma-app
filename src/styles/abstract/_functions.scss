
@function theme-color($brand: 'dxp', $key: 'color-primary') {
  @if($brand='dxp')
  {
    $map: map-get($dxp-pallette, $brand);
    @return $map;
  }
  @if($brand='vv')
  {
    $map: map-get($vv-pallette, $key);
    @return $map;
  }
  @if($brand='ncl')
  {
    $map: map-get($ncl-pallette, $key);
    @return $map;
  }
}

@function theme-background-color($brand: 'dxp', $key: 'color-primary') {
  @if($brand ='dxp'){
    $map: map-get($dxp-pallette, $key);
    @return $map;
  }
  @if($brand ='vv'){
    $map: map-get($vv-pallette, $key);
    @return $map;
 
  }
  @if($brand ='ncl'){
    $map: map-get($ncl-pallette,$key);
    @return $map;
  }


}

@function theme-font-family($brand: 'dxp', $key: 'font-family-primary') {
  $map: map-get($theme-font-family, $brand);
  @return map-get($map, $key);
}

@function theme-font-weight($brand: 'dxp', $key: 'font-weight-normal') {
  $map: map-get($theme-font-weight, $brand);
  @return map-get($map, $key);
}

@function theme-font-size($brand: 'dxp', $key: 'font-size-14') {
  $map: map-get($theme-font-size, $brand);
  @return map-get($map, $key);
}

@function rem($pixels, $context: $unit) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return $pixels / $context * 1rem;
}

@function map-get-default($map, $key) {
  $result: $key;
  @if (map-get($map, $key)) {
    $result: map-get($map, $key);
  }

  @return $result;
}

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @return if(
    $index,
    str-slice($string, 1, $index - 1) + $replace +
      str-replace(str-slice($string, $index + str-length($search)), $search, $replace),
    $string
  );
}

@function to-string($value) {
  @return inspect($value);
}

// url encodes # in strings (see backgroundsvg.scss for working example)
@function hexToUrl($color) {
  $newcolor: str-replace(to-string($color), '#', '%23');
  @return $newcolor;
}

// the reason we use 1600 here is because the designs were created at that width
// when we get a measurement from the design we need to use 1600 to accurately
// perform the calculation
//
// this function should only really be used for transitions between breakpoints
// then set a final max size for the font above 1440px e.g.
// e.g @include media-breakpoint-up(sm) { font-size: pxToVw(123) }
// e.g @include media-breakpoint-up(xl) { font-size: rem(123) }
@function pxToVw($pxSize, $screenSize: 1600) {
  @return ($pxSize / $screenSize * 100) + vw;
}

@function pxToVwDesktop($pxSize, $screenSize: 1600) {
  @return ($pxSize / $screenSize * 100) + vw;
}

@function pxToVwMobile($pxSize, $screenSize: 375) {
  @return ($pxSize / $screenSize * 100) + vw;
}



